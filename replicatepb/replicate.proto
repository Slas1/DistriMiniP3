syntax = "proto3";

option go_package = "./replicatepb";

package replicatepb;

service ServerCommunication {
    rpc JoinCommunication(JoinRequest) returns (JoinResponse){}
    rpc ServerInformationUpdate(SIUpdateRequest) returns (SIUpdateResponse){}
    rpc AuctionInformationUpdate(AIUpdateRequest) returns (AIUpdateResponse){}
    rpc IsAlive(Poke) returns (HandSign){}
}

service AuctionCommunication {
    rpc JoinAuction(JoinRequest) returns (JoinResponse){}
    rpc NewBid(BidRequest) returns (BidResponse){}
    rpc Result(ResultRequest) returns (ResultResponse){}
}

message JoinRequest {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message JoinResponse {
    int32 LamportTime = 1;
    int32 ID = 2;
    int32 YourNewID = 3;
    repeated bool AllServerIDs = 4;
}

message SIUpdateRequest {
    int32 LamportTime = 1;
    int32 ID = 2;
    string ChangeName = 3;
    repeated int32 NewValue = 4;
}

message SIUpdateResponse {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message AIUpdateRequest {
    int32 LamportTime = 1;
    int32 ID = 2;
    bool AuctionStatus = 3;
    int32 BidderID = 4;
    int32 BidValue = 5;
    int32 AuctionTimer = 6;
}

message AIUpdateResponse {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message Poke {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message HandSign {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message BidRequest {
    int32 LamportTime = 1;
    int32 ID = 2;
    int32 BidValue = 3;
}

message BidResponse {
    int32 LamportTime = 1; 
    string YourBidStatus = 2;
}

message ResultRequest {
    int32 LamportTime = 1;
    int32 ID = 2;
}

message ResultResponse {
    int32 LamportTime = 1;
    bool AuctionOngoing = 2;
    int32 HighestBid = 3;
}